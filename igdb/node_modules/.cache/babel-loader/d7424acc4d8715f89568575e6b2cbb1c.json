{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Google Drive\\\\bkp\\\\JS\\\\projects\\\\gamedb\\\\igdb\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Summary from './Summary';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      const data = this; //seta o this de uma const para acessa-lo posteriormente dentro da promise  \n\n      axios.get('http://localhost:4000/').then(function (response) {\n        const name = response.data.name;\n        const url = response.data.url;\n        const rating = response.data.rating;\n        const summary = response.data.summary;\n        const genres = response.data.genres;\n        const screenshots = response.data.screenshots;\n        const platforms = response.data.platforms;\n        data.setState({\n          name: name,\n          url: url,\n          rating: rating,\n          summary: summary,\n          genres: genres,\n          screenshots: screenshots,\n          platforms: platforms\n        });\n        console.log(data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      rating: 0,\n      name: '',\n      url: '',\n      summary: '',\n      genres: [],\n      screenshots: [],\n      platforms: []\n    };\n  }\n\n  render() {\n    let genresRow = [];\n\n    for (let i = 0; i < this.state.genres.length; i++) {\n      genresRow.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\" \", this.state.genres[i], \" | \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 22\n      }, this));\n    }\n\n    let platformsRow = [];\n\n    for (let i = 0; i < this.state.platforms.length; i++) {\n      platformsRow.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\" \", this.state.platforms[i], \" | \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this));\n    }\n\n    let screenshotsData = [];\n\n    if (this.state.screenshots.length > 0) {\n      for (let i = 0; i < 3; i++) {\n        screenshotsData.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ss-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.screenshots[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 62\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 30\n        }, this));\n      }\n    } else {\n      console.log(this.state.screenshots);\n    }\n    /*\n    return (\n      <div>\n        <div className=\"App\">\n          <div className=\"elipse\"><p>{Math.round(this.state.rating)}</p></div>\n          <h1>{this.state.name}</h1>\n          <img src={this.state.url}></img>\n          <button type=\"button\" onClick={this.getData}>teste</button>\n          <span className=\"genres\"> Genres:\n              {this.state.genres.map(list =>{return list})}\n          </span>\n          <span className=\"genres\"> Platforms:\n              {platformsRow}\n          </span>\n          \n        </div>\n        <Summary summary={this.state.summary}></Summary>\n        <p className=\"text-screenshots\">Screenshots:</p>\n        <div className=\"screen-shots\">{screenshotsData}</div>\n      </div>\n    );*/\n\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anderson/Google Drive/bkp/JS/projects/gamedb/igdb/src/App.js"],"names":["React","axios","Summary","App","Component","constructor","props","getData","data","get","then","response","name","url","rating","summary","genres","screenshots","platforms","setState","console","log","catch","error","state","render","genresRow","i","length","push","platformsRow","screenshotsData"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport axios from 'axios'\nimport Summary from './Summary'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      rating: 0,\n      name: '',\n      url: '',\n      summary: '',\n      genres: [],\n      screenshots: [],\n      platforms: [],\n    };\n  }\n  getData = () => {\n    const data = this //seta o this de uma const para acessa-lo posteriormente dentro da promise  \n\n    axios.get('http://localhost:4000/')\n      .then(function (response) {\n\n        const name = response.data.name\n        const url = response.data.url\n        const rating = response.data.rating\n        const summary = response.data.summary\n        const genres = response.data.genres\n        const screenshots = response.data.screenshots\n        const platforms = response.data.platforms\n\n       data.setState({ name: name, url: url, rating: rating, summary: summary, genres: genres, \n         screenshots: screenshots, platforms: platforms })\n       \n         console.log(data)\n      })\n      .catch(function (error) {\n\n        console.log(error);\n      })\n  }\n\n  render() {\n    \n    let genresRow = []\n    for (let i = 0; i < this.state.genres.length; i++) {\n      genresRow.push(<a key={i}> {this.state.genres[i]} | </a>)\n    }\n\n    let platformsRow = []\n    for (let i = 0; i < this.state.platforms.length; i++) {\n      platformsRow.push(<a key={i}> {this.state.platforms[i]} | </a>)\n    }\n    \n    let screenshotsData = []\n\n    if (this.state.screenshots.length > 0) {\n      for (let i = 0; i < 3; i++) {\n        screenshotsData.push(<div className=\"ss-img\" key={i}><img src={this.state.screenshots[i]}></img></div>)\n      } \n    } else{ console.log(this.state.screenshots)}\n    /*\n    return (\n      <div>\n        <div className=\"App\">\n          <div className=\"elipse\"><p>{Math.round(this.state.rating)}</p></div>\n          <h1>{this.state.name}</h1>\n          <img src={this.state.url}></img>\n          <button type=\"button\" onClick={this.getData}>teste</button>\n          <span className=\"genres\"> Genres:\n              {this.state.genres.map(list =>{return list})}\n          </span>\n          <span className=\"genres\"> Platforms:\n              {platformsRow}\n          </span>\n          \n        </div>\n        <Summary summary={this.state.summary}></Summary>\n        <p className=\"text-screenshots\">Screenshots:</p>\n        <div className=\"screen-shots\">{screenshotsData}</div>\n      </div>\n    );*/\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}