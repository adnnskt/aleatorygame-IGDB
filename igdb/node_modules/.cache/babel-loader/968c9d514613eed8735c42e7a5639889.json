{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Google Drive\\\\bkp\\\\JS\\\\projects\\\\gamedb\\\\igdb\\\\src\\\\App.js\";\nimport './App.css';\nimport React from 'react';\nimport axios from 'axios';\nimport Summary from './Summary'; //import { useState } from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeData = aleatorio => {\n      const dataChange = this; //seta o this de uma const para acessa-lo posteriormente dentro da promise  \n\n      axios.get(`http://localhost:4000/${aleatorio}`).then(function (response) {\n        let name = response.data.name;\n        let url = response.data.url;\n        let rating = response.data.rating;\n        let release = response.data.release;\n        let summary = response.data.summary;\n        let genres = response.data.genres;\n        let screenshots = response.data.screenshots;\n        let platforms = response.data.platforms;\n        dataChange.setState({\n          name: name,\n          url: url,\n          rating: rating,\n          summary: summary,\n          genres: genres,\n          screenshots: screenshots,\n          platforms: platforms,\n          release: release\n        }); //console.log(dataChange)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.postData = () => {\n      const max = 20000;\n      const min = 1;\n      let aleatorio = Math.floor(Math.random() * (max - min) + min);\n      let textBox = document.querySelector('.text-box');\n      textBox.style.visibility = \"hidden\";\n      axios.post('http://localhost:4000/postIn', {\n        random: `${aleatorio}`\n      }).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      setTimeout(() => {\n        this.changeData(aleatorio);\n      }, 5000);\n    };\n\n    this.getData = () => {\n      const data = this; //seta o this de uma const para acessa-lo posteriormente dentro da promise  \n\n      axios.get('http://localhost:4000/').then(function (response) {\n        let name = response.data.name;\n        let url = response.data.url;\n        let rating = response.data.rating;\n        let release = response.data.release;\n        let summary = response.data.summary;\n        let genres = response.data.genres;\n        let screenshots = response.data.screenshots;\n        let platforms = response.data.platforms;\n        data.setState({\n          name: name,\n          url: url,\n          rating: rating,\n          summary: summary,\n          genres: genres,\n          screenshots: screenshots,\n          platforms: platforms,\n          release: release\n        }); //console.log(data)\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      release: '',\n      rating: 0,\n      name: '',\n      url: '',\n      summary: '',\n      genres: [],\n      screenshots: [],\n      platforms: []\n    };\n  }\n\n  render() {\n    //this.getData()\n    let genresRow = [];\n\n    for (let i = 0; i < this.state.genres.length; i++) {\n      genresRow.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\" \", this.state.genres[i], \" | \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 22\n      }, this));\n    }\n\n    let platformsRow = [];\n\n    for (let i = 0; i < this.state.platforms.length; i++) {\n      platformsRow.push( /*#__PURE__*/_jsxDEV(\"a\", {\n        children: [\" \", this.state.platforms[i], \" | \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this));\n    }\n\n    let screenshotsData = [];\n\n    if (this.state.screenshots.length > 0) {\n      for (let i = 0; i < 3; i++) {\n        screenshotsData.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ss-img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.screenshots[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 62\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 30\n        }, this));\n      }\n    } else {\n      console.log(this.state.screenshots);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"aleatorygame.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"joystick\",\n          onClick: this.postData,\n          children: \"Click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"elipse\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: Math.round(this.state.rating)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"genres\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" Genres: \", genresRow]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" Platforms: \", platformsRow, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" Release: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              children: this.state.release\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        summary: this.state.summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-screenshots\",\n        children: \"Screenshots:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"screen-shots\",\n        children: screenshotsData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Anderson/Google Drive/bkp/JS/projects/gamedb/igdb/src/App.js"],"names":["React","axios","Summary","App","Component","constructor","props","changeData","aleatorio","dataChange","get","then","response","name","data","url","rating","release","summary","genres","screenshots","platforms","setState","catch","error","console","log","postData","max","min","Math","floor","random","textBox","document","querySelector","style","visibility","post","setTimeout","getData","state","render","genresRow","i","length","push","platformsRow","screenshotsData","round"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react'\nimport axios from 'axios'\nimport Summary from './Summary'\n//import { useState } from 'react';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      release: '',\n      rating: 0,\n      name: '',\n      url: '',\n      summary: '',\n      genres: [],\n      screenshots: [],\n      platforms: [],\n    }\n  }\n\n\n  changeData = (aleatorio) => {\n    const dataChange = this //seta o this de uma const para acessa-lo posteriormente dentro da promise  \n\n    axios.get(`http://localhost:4000/${aleatorio}`)\n      .then(function (response) {\n\n        let name = response.data.name\n        let url = response.data.url\n        let rating = response.data.rating\n        let release = response.data.release\n        let summary = response.data.summary\n        let genres = response.data.genres\n        let screenshots = response.data.screenshots\n        let platforms = response.data.platforms\n\n        dataChange.setState({\n          name: name, url: url, rating: rating, summary: summary, genres: genres,\n          screenshots: screenshots, platforms: platforms, release: release\n        })\n        //console.log(dataChange)\n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  postData = () => {\n    const max = 20000\n    const min = 1\n    let aleatorio = Math.floor(Math.random() * (max - min) + min)\n    let textBox = document.querySelector('.text-box')\n    textBox.style.visibility= \"hidden\";\n\n    axios.post('http://localhost:4000/postIn', {\n      random: `${aleatorio}`\n    })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    setTimeout(() => { this.changeData(aleatorio) }, 5000)\n  }\n\n  getData = () => {\n    const data = this //seta o this de uma const para acessa-lo posteriormente dentro da promise  \n\n    axios.get('http://localhost:4000/')\n      .then(function (response) {\n\n        let name = response.data.name\n        let url = response.data.url\n        let rating = response.data.rating\n        let release = response.data.release\n        let summary = response.data.summary\n        let genres = response.data.genres\n        let screenshots = response.data.screenshots\n        let platforms = response.data.platforms\n\n        data.setState({\n          name: name, url: url, rating: rating, summary: summary, genres: genres,\n          screenshots: screenshots, platforms: platforms, release: release\n        })\n\n        //console.log(data)\n      })\n      .catch(function (error) {\n\n        console.log(error);\n      })\n  }\n\n\n  render() {\n\n    //this.getData()\n    let genresRow = []\n\n    for (let i = 0; i < this.state.genres.length; i++) {\n      genresRow.push(<a key={i}> {this.state.genres[i]} | </a>)\n    }\n\n    let platformsRow = []\n\n    for (let i = 0; i < this.state.platforms.length; i++) {\n      platformsRow.push(<a key={i}> {this.state.platforms[i]} | </a>)\n    }\n\n    let screenshotsData = []\n\n    if (this.state.screenshots.length > 0) {\n      for (let i = 0; i < 3; i++) {\n        screenshotsData.push(<div className=\"ss-img\" key={i}><img src={this.state.screenshots[i]}></img></div>)\n      }\n    } else { console.log(this.state.screenshots) }\n\n    return (\n      <div>\n        <div className=\"load-page\"></div>\n        <div className=\"App\">\n\n          <p className='title'>aleatorygame.</p>\n          <button className=\"joystick\" onClick={this.postData}>Click</button>\n          <div className=\"elipse\"><p>{Math.round(this.state.rating)}</p></div>\n          <h1>{this.state.name}</h1>\n          <div className=\"genres\">\n            <span> Genres: {genresRow}</span>\n            <span > Platforms: {platformsRow} </span>\n            <span> Release: <a>{this.state.release}</a></span>\n          </div>\n          <img src={this.state.url}></img>\n        </div>\n        <Summary summary={this.state.summary}></Summary>\n        <p className=\"text-screenshots\">Screenshots:</p>\n        <div className=\"screen-shots\">{screenshotsData}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}